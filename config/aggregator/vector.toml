#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs
# Chat: https://chat.vector.dev
# ------------------------------------------------------------------------------

# The directory used for persisting Vector state.
data_dir = "/var/lib/vector"

# Configure Vector's GraphQL API.
[api]
enabled = true
address = "[::]:8686"
playground = false

# Receives observability data from a Datadog Agent over HTTP or HTTPS.
[sources.datadog_agent]
type = "datadog_agent"
address = "[::]:8282"

# Collect logs from a Fluentd or Fluent Bit agent.
[sources.fluent]
type = "fluent"
address = "[::]:24224"

# Access to the metrics produced by Vector itself.
[sources.internal_metrics]
type = "internal_metrics"

# Collect logs from a Logstash agent.
[sources.logstash]
type = "logstash"
address = "[::]:5044"

# Receive logs from Splunk.
[sources.splunk_hec]
type = "splunk_hec"
address = "[::]:8080"

# Collect metrics emitted by the StatsD aggregator.
[sources.statsd]
type = "statsd"
mode = "tcp"
address = "[::]:8125"

# Collect logs sent via Syslog.
[sources.syslog]
type = "syslog"
mode = "tcp"
address = "[::]:9000"

# Collect observability data from another Vector instance.
[sources.vector]
type = "vector"
address = "[::]:6000"

# Publish log events to Datadog
[sinks.datadog_logs]
type = "datadog_logs"
inputs = [
    "datadog_agent",
    "fluent",
    "logstash",
    "splunk_hec",
    "syslog",
    "vector",
]
default_api_key = "${DATADOG_API_KEY}"

# Output metric events to a Prometheus exporter running on the host.
[sinks.prom_exporter]
type = "prometheus_exporter"
inputs = ["internal_metrics", "statsd"]
address = "[::]:9090"
